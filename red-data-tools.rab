= Red Data Tools

: subtitle
   楽しく実装すればいいじゃんねー
: author
   須藤功平
: institution
   株式会社クリアコード
: content-source
   沖縄Ruby会議02
: date
   2018-03-10
: start-time
   2018-03-10T13:00:00+09:00
: end-time
   2018-03-10T13:50:00+09:00
: theme
   clear-code

= Red Data Tools

プロジェクト

= 実現したいこと

Rubyで\n
データ処理

= やっていること

データ処理用の\n
ツールの開発

= 開発例

  * 各種フォーマットを扱うgem
    * Apache Arrow, Apache Parquet, CSV, ...
  * 各種パッケージの用意
    * deb, RPM, Homebrew, ...
  * ...

= この話の目的

勧誘\n
(('note:一緒に開発しようぜ！'))

= 勧誘方法

  * プロジェクトのポリシーを紹介
    * 一緒に活動したくなる！
  * 開発の具体例を紹介
    * 一緒に開発したくなる！

= ポリシー1

(('tag:center'))
(('tag:large'))
Rubyコミュニティーを\n
超えて協力する

(('tag:center'))
(('note:もちろんRubyコミュニティーとも協力する'))

= Rubyに閉じずに協力

  * 他の言語は敵ではない
    * 他の言語がよくなることは\n
      Rubyがなにかを失うことではない
  * みんなよくなったらいいじゃん
    * Rubyも他の言語も

= 協力例\n(('note:Apache Arrow'))

  * Pythonの人達他と一緒にC/C++のライブラリーを開発
    * それぞれでバインディングを開発
    * それぞれで同じライブラリーを活用

= ポリシー2

(('tag:center'))
(('tag:large'))
非難することよりも\n
手を動かすことが大事

(('tag:center'))

= 非難しない

そんなことを\n
している\n
時間はない

= 手を動かす

  * これ、よくないなー
    * よくすればいいじゃんねー
  * これがないからなー
    * 作ればいいじゃんねー

= ポリシー3

(('tag:center'))
(('tag:large'))
一回だけの活発な活動より\n
小さくても\n
継続的に活動することが\n
大事

(('tag:center'))

= 一回だけの活発な活動

  * ○○作ったよ！どーん！
    * すごい！
    * (('note:…数年後…'))今動かないんだよね…

= 継続的な活動

  * ちまちま○○作ってるんだー！
    * がんばってね！今後に期待！
    * (('note:…数年後…'))これは…使える！

= 継続的な活動のために

  * がんばり過ぎない
    * 短距離走ではなくマラソン
    * 途中で休んだっていい
  * 1人で抱え込まない
    * みんなでやれば途中で休みやすい

= ポリシー4

(('tag:center'))
(('tag:large'))
現時点での知識不足は\n
問題ではない

(('tag:center'))

= 知識不足？

  * 高速な実装の実現
    * プログラミング・数学などの\n
      高度な知識は便利
  * 今すごい人でも\n
    最初はなにも知らなかった
    * 「今知らないこと」は\n
      「始めない理由」にはならない

= 私たちは学べる

  * 知識は身につく
    * 活動していく中で自然と
  * 学び方
    * OSSの既存実装から学習
    * ドキュメントを読む
    * 他の人から教えてもらう

= ポリシー5

(('tag:center'))
(('tag:large'))
部外者からの非難は\n
気にしない

(('tag:center'))

= 部外者からの非難

  * Rubyで頑張ってもアレだよねー\n
    とか
    * 無視する
  * 対応している時間はない

= ポリシー6

楽しくやろう！

= 楽しむ

使っているのは\n
Rubyだから！

= ポリシー

  * Ruby外とも協力
  * 非難するより手を動かす
  * 継続的な活動
  * 知識不足は問題ない
  * 外からの非難は気にしない
  * 楽しくやろう！

= 開発例

  * ツールの紹介((*ではない*))
  * 実装の紹介
    * 開発中におっと思ったやつとか
    * 紹介したいやつとか

= 開発例1

csv

= csv

  * CSVの読み書きライブラリー
  * 2003年から標準添付
  * 2018年からメンテナンスを引取

= digを追加したとき

(('tag:x-small'))((<URL:https://github.com/ruby/csv/pull/15>))

  * (({CSV::Table#dig}))
  * (({CSV::Row#dig}))

= digの作り方

  # rouge ruby

  def dig(index, *indexes)
    # ここだけ違う
    value = find_value(index)
    # ↓は共通
    return nil if value.nil?
    return value if indexes.empty?
    value.dig(*indexes)
  end

= CSV::Rowでのfind_value

  # rouge ruby

  row[index] # => field value

(({dig}))の中では(({self}))の(({[]}))を呼べばよい

= []の呼び方

  # rouge ruby

  def dig(index, *indexes)
    # インスタンスメソッドでは
    # selfを省略できるからこう？
    value = [index]
    # ↑は配列リテラル
    # ...
  end

= []の呼び方

  # rouge ruby

  def dig(index, *indexes)
    # selfは省略できないか。。。
    # メソッド呼び出し形式なら？
    value = self.[index]
    # ↑はシンタックスエラー
    # ...
  end

= []の呼び方

  # rouge ruby

  def dig(index, *indexes)
    # こういうときこそsendで　　
    # メソッド呼び出し
    value = send(:[], index)
    # 動く
    # ...
  end

= []の呼び方

  # rouge ruby

  def dig(index, *indexes)
    # row[index]みたいに書けば　
    # よかった
    value = self[index]
    # もちろん動く
    # ...
  end

= selfの[]の呼び方

  * 自分も昔悩んだ気がする
  * 懐かしかったので紹介

= Join Red Data Tools!

  * Webサイト
    * (('tag:x-small'))((<URL:https://red-data-tools.github.io/ja/>))
  * チャット
    * (('tag:x-small'))((<URL:https://gitter.im/red-data-tools/ja>))
  * GitHub
    * (('tag:x-small'))((<URL:https://github.com/red-data-tools/>))

